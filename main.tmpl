terraform {
  backend "gcs" {
    bucket  = "nyt-bsre-prd-tfstate"
    project = "nyt-bsre-prd"
  }
}

# pin the Fastly provider to 0.1.3. We should not get surprised by automatic upgrades
provider "fastly" {
  version = "= 0.1.3"
}

variable "env" {
  type = "string"
}

variable "service_name" {
  type = "string"
}

variable "sumologic_endpoint" {
  type = "map"

  default = {
    dev = "https://collectors.sumologic.com/receiver/v1/http/ZaVnC4dhaV090sPFU_YnnEP_F61BBPpciroz627Cc5zoPONnZQtGWWIiqPAs6g3LsPXOc3JfFUPl44yl-tlLnkH-Pn7xp1X9QarWeCQeQjSPeA0wqbLn-A=="
    stg = "https://collectors.sumologic.com/receiver/v1/http/ZaVnC4dhaV090sPFU_YnnEP_F61BBPpciroz627Cc5zoPONnZQtGWWIiqPAs6g3LsPXOc3JfFUPl44yl-tlLnkH-Pn7xp1X9QarWeCQeQjSPeA0wqbLn-A=="
    prd = "https://collectors.sumologic.com/receiver/v1/http/ZaVnC4dhaV3DIdcy2GqnQ5DMhk6CZkjlLK9C5V5fjRSlaVm4RJg3dU1REHf-_owjetrn1mzlLqDx1KlNQ6qwtrgHf1KwvOaVcZBHpQSdqG-tFYf0OFYEUQ=="
  }
}

resource "fastly_service_v1" "www" {
  name = "www.${var.service_name}"

  {{ $domains := (datasource "config").domains }}

  {{/*
    for DEV, we will range over the domains for sandboxes
    if the branch exists as a scalar (sandoxes are branch based)
    if there are no domains for the branch, range over .dev env base domains
  */}}

  {{if eq (env.Getenv "env") "dev"}}

    {{ $domain_service := env.Getenv "DRONE_BRANCH"}}
    {{if (has $domains $domain_service)}}
      {{range (index $domains $domain_service) -}}
      domain {
        name = "{{.name}}"
      }
      {{end -}}
    {{else}}
      {{range $domains.dev -}}
      domain {
        name = "{{.name}}"
      }
      {{end -}}
    {{end}}

  {{else}}

  {{/*
    if we are in stg or prd, just range over the domains configured
    as there are no env/branch scalars under stg/prd configured domains
  */}}

    {{range $domains -}}
    domain {
      name = "{{.name}}"
    }
    {{end -}}

  {{end}}

  {{ $backends := (datasource "config").backends }}
  {{ $backend_defaults := (datasource "config").backend_defaults }}
  {{ $healthcheck_defaults := (datasource "config").healthcheck_defaults }}
  {{range $backends -}}
  backend = {
    name = "{{.name}}"
    address = "{{.address}}"
    auto_loadbalance = "{{$backend_defaults.auto_loadbalance}}"
    between_bytes_timeout = "{{.between_bytes_timeout}}"
    connect_timeout = "{{.connect_timeout}}"
    first_byte_timeout = "{{.first_byte_timeout}}"
    {{if (has . "port")}}
    port = "{{.port}}"
    {{else}}
    port = "{{$backend_defaults.port}}"
    {{end}}
    {{if (has . "use_ssl")}}
    {{if eq .use_ssl "true"}}
    use_ssl = "{{.use_ssl}}"
    ssl_check_cert = "{{$backend_defaults.ssl_check_cert}}"
    ssl_cert_hostname = "{{.ssl_cert_hostname}}"
    ssl_sni_hostname = "{{.ssl_sni_hostname}}"
    {{else}}
    use_ssl = "false"
    {{end}}
    {{else}}
    use_ssl = "{{$backend_defaults.use_ssl}}"
    ssl_check_cert = "{{$backend_defaults.ssl_check_cert}}"
    ssl_cert_hostname = "{{.ssl_cert_hostname}}"
    ssl_sni_hostname = "{{.ssl_sni_hostname}}"
    {{end}}
    healthcheck = "{{.name}}_healthcheck"
    request_condition = "{{.name}}_backend"
  }

  healthcheck = {
    name = "{{.name}}_healthcheck"
    host = "{{.healthcheck.host}}"
    path = "{{.healthcheck.path}}"
    check_interval = "{{.healthcheck.check_interval}}"
    expected_response = "{{.healthcheck.expected_response}}"
    initial = "{{.healthcheck.initial}}"
    threshold = "{{.healthcheck.threshold}}"
    timeout = "{{.healthcheck.timeout}}"
    window = "{{.healthcheck.window}}"
    {{if (has .healthcheck "method")}}
    method = "{{.healthcheck.method}}"
    {{else}}
    method = "{{$healthcheck_defaults.method}}"
    {{end}}
  }

  condition = {
    name = "{{.name}}_backend"
    statement = "req.http.x-nyt-backend == \"{{.name}}\""
    type = "REQUEST"
    priority = "500"
  }

  {{end -}}



  {{ $cloud_storage_buckets := (datasource "config").cloud_storage_buckets }}
  {{ $cloud_storage_bucket_defaults := (datasource "config").cloud_storage_bucket_defaults }}
  {{range $cloud_storage_buckets -}}

  condition = {
    name = "{{.pagetype}}_bucket"
    statement = "req.http.x-pagetype == \"{{.pagetype}}\""
    type = "REQUEST"
    priority = "500"
  }

  header {
    action      = "set"
    name        = "{{.pagetype}}"
    priority    = "400"
    source      = "\"{{.bucket_name}}\""
    destination = "http.x-nyt-bucket-name"
    type        = "request"
    request_condition   = "{{.pagetype}}_bucket"
  }

  {{if eq .auth "true"}}
  header {
    action      = "set"
    name        = "{{.pagetype}}_auth"
    priority    = "401"
    source      = "\"true\""
    destination = "http.x-nyt-bucket-auth"
    type        = "request"
    request_condition   = "{{.pagetype}}_bucket"
  }


  header {
    action      = "set"
    name        = "{{.pagetype}}_bucket_provider"
    priority    = "401"
    source      = "\"{{.bucket_provider}}\""
    destination = "http.x-nyt-bucket-provider"
    type        = "request"
    request_condition   = "{{.pagetype}}_bucket"
  }

  header {
    action      = "set"
    name        = "{{.pagetype}}_token"
    priority    = "401"
    {{if (has . "auth_key")}}
    source      = "\"{{.auth_key}}\""
    {{else}}
    {{if eq .bucket_provider "gcs"}}
    source      = "\"{{$cloud_storage_bucket_defaults.gcs_auth_key}}\""
    {{else}}
    source      = "\"{{$cloud_storage_bucket_defaults.s3_auth_key}}\""
    {{end}}
    {{end}}
    destination = "http.x-nyt-bucket-token"
    type        = "request"
    request_condition   = "{{.pagetype}}_bucket"
  }

  header {
    action      = "set"
    name        = "{{.pagetype}}_secret"
    priority    = "401"
    {{if (has . "auth_secret")}}
    source      = "\"{{.auth_secret}}\""
    {{else}}
    {{if eq .bucket_provider "gcs"}}
    source      = "\"{{$cloud_storage_bucket_defaults.gcs_auth_secret}}\""
    {{else}}
    source      = "\"{{$cloud_storage_bucket_defaults.s3_auth_secret}}\""
    {{end}}
    {{end}}
    destination = "http.x-nyt-bucket-secret"
    type        = "request"
    request_condition   = "{{.pagetype}}_bucket"
  }

  {{end}}

  {{end -}}

  # this is set in init-vars.vcl
  header {
    action      = "set"
    name        = "environment"
    priority    = "1"
    source      = "\"${var.env}\""
    destination = "http.x-environment"
    type        = "request"
  }

  # this is not being used yet in TF, look in default.vcl
  condition {
    name      = "Suppress adx and svc unless 50x response code"
    priority  = 10
    statement = "(req.url !~ \"^/svc/\" && req.url !~ \"^/adx/\") || resp.status >= 500"
    type      = "RESPONSE"
  }

  condition {
    name      = "do-not-log"
    priority  = 10
    statement = "!req.url"
    type      = "RESPONSE"
  }

  # look in default.vcl for this logic for the time being
  default_ttl = 3600

  gzip {
    content_types = [
      "application/x-font-opentype",
      "text/xml",
      "text/javascript",
      "application/x-font-ttf",
      "font/otf",
      "font/eot",
      "image/svg+xml",
      "application/json",
      "text/plain",
      "font/opentype",
      "application/vnd.ms-fontobject",
      "image/vnd.microsoft.icon",
      "application/xml",
      "application/x-javascript",
      "application/javascript",
      "text/css",
      "text/html",
      "application/x-font-truetype",
    ]

    extensions = [
      "json",
      "ico",
      "svg",
      "otf",
      "eot",
      "js",
      "html",
      "ttf",
      "css",
    ]

    name = "Default Gzip Policy"
  }

  header {
    action        = "set"
    destination   = "http.Fastly-Purge-Requires-Auth"
    ignore_if_set = false
    name          = "Fastly Purge"
    priority      = "10"
    source        = "\"1\""
    type          = "request"
  }

  # this does not currently log anything, it's only providing the log stream configuration, see the conditional
  sumologic {
    format             = "%h %l %u %t %{Host}i \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\" backend=[%{if(req.http.x-nyt-backend,req.http.x-nyt-backend,\"-\")}V] pagetype=[%{if(req.http.X-PageType,req.http.X-PageType,\"-\")}V] apiversion=[%{if(resp.http.X-API-Version,resp.http.X-API-Version,\"-\")}V] cachetype=[%{if(fastly_info.state,fastly_info.state,\"-\")}V] reqtime=[%{time.elapsed}V] reqsize=[%I] protocol=[%{if(req.http.Fastly-SSL,\"https\",\"http\")}V] %{if(req.http.x-redirect-reason,req.http.x-redirect-reason,\"\")}V"
    format_version     = "2"
    message_type       = "classic"
    name               = "web${var.env}-www"
    response_condition = "do-not-log"
    url                = "${var.sumologic_endpoint[var.env]}"
  }

  vcl {
    name    = "backend-newsdev-attribute"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-newsdev-attribute.vcl")}"
  }

  vcl {
    name    = "normalize-url"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/normalize-url.vcl")}"
  }

  vcl {
    name    = "backends-dev"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backends-dev.vcl")}"
  }

  vcl {
    name    = "backend-newsdev-gcs"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-newsdev-gcs.vcl")}"
  }

  vcl {
    name    = "acl-blacklist"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/acl-blacklist.vcl")}"
  }

  vcl {
    name    = "default"
    main    = true
    content = "${file("${path.module}/builds/www.stg.nytimes.com/default.vcl")}"
  }

  vcl {
    name    = "surrogate-key"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/surrogate-key.vcl")}"
  }

  vcl {
    name    = "geoip-timezone-map-table"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/geoip-timezone-map-table.vcl")}"
  }

  vcl {
    name    = "backend-elections"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-elections.vcl")}"
  }

  vcl {
    name    = "querystring"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/querystring.vcl")}"
  }

  vcl {
    name    = "ipauth"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/ipauth.vcl")}"
  }

  vcl {
    name    = "https-redirect"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/https-redirect.vcl")}"
  }

  vcl {
    name    = "backends-prd"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backends-prd.vcl")}"
  }

  vcl {
    name    = "response-headers"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/response-headers.vcl")}"
  }

  vcl {
    name    = "backend-mwcm"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-mwcm.vcl")}"
  }

  vcl {
    name    = "backend-weddings-api"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-weddings-api.vcl")}"
  }

  vcl {
    name    = "backend-content-api"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-content-api.vcl")}"
  }

  vcl {
    name    = "backend-intl"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-intl.vcl")}"
  }

  vcl {
    name    = "backend-init-vars"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-init-vars.vcl")}"
  }

  vcl {
    name    = "initialize-vars"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/initialize-vars.vcl")}"
  }

  vcl {
    name    = "backend-newsdev-gke"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-newsdev-gke.vcl")}"
  }

  vcl {
    name    = "frame-buster"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/frame-buster.vcl")}"
  }

  vcl {
    name    = "backend-games"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-games.vcl")}"
  }

  vcl {
    name    = "tips"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/tips.vcl")}"
  }

  vcl {
    name    = "backends-stg"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backends-stg.vcl")}"
  }

  vcl {
    name    = "device-detect"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/device-detect.vcl")}"
  }

  vcl {
    name    = "backend-video"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-video.vcl")}"
  }

  vcl {
    name    = "subscription-currency-map-table"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/subscription-currency-map-table.vcl")}"
  }

  vcl {
    name    = "backend-tbooks"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-tbooks.vcl")}"
  }

  vcl {
    name    = "acl-vpc-gateway"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/acl-vpc-gateway.vcl")}"
  }

  vcl {
    name    = "backend-well"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-well.vcl")}"
  }

  vcl {
    name    = "backend-programs"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-programs.vcl")}"
  }

  vcl {
    name    = "www-redirect"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/www-redirect.vcl")}"
  }

  vcl {
    name    = "homepage-redirect"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/homepage-redirect.vcl")}"
  }

  vcl {
    name    = "health-check"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/health-check.vcl")}"
  }

  vcl {
    name    = "mobile-redirect"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/mobile-redirect.vcl")}"
  }

  vcl {
    name    = "backend-times-journeys"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-times-journeys.vcl")}"
  }

  vcl {
    name    = "userinfo"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/userinfo.vcl")}"
  }

  vcl {
    name    = "cookie"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/cookie.vcl")}"
  }

  vcl {
    name    = "geoip-location-consolidation-map-table"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/geoip-location-consolidation-map-table.vcl")}"
  }

  vcl {
    name    = "sanitize-url"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/sanitize-url.vcl")}"
  }

  vcl {
    name    = "acl-internal"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/acl-internal.vcl")}"
  }

  vcl {
    name    = "vi-allocation"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/vi-allocation.vcl")}"
  }

  vcl {
    name    = "backend-health-service"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-health-service.vcl")}"
  }

  vcl {
    name    = "geoip-service"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/geoip-service.vcl")}"
  }

  vcl {
    name    = "acl-crawlers"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/acl-crawlers.vcl")}"
  }

  vcl {
    name    = "acl-external-staging-access"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/acl-external-staging-access.vcl")}"
  }

  vcl {
    name    = "backends-main"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backends-main.vcl")}"
  }

  vcl {
    name    = "backend-watching"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-watching.vcl")}"
  }

  vcl {
    name    = "uuid"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/uuid.vcl")}"
  }

  vcl {
    name    = "error-pages"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/error-pages.vcl")}"
  }

  vcl {
    name    = "migration-allocation"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/migration-allocation.vcl")}"
  }

  vcl {
    name    = "backend-nyt4-fallback"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-nyt4-fallback.vcl")}"
  }

  vcl {
    name    = "backend-vi"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-vi.vcl")}"
  }

  vcl {
    name    = "cloud-storage-bucket-headers"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/cloud-storage-bucket-headers.vcl")}"
  }

  vcl {
    name    = "backend-adx-static"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-adx-static.vcl")}"
  }

  vcl {
    name    = "set-cache-object-ttl"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/set-cache-object-ttl.vcl")}"
  }

  vcl {
    name    = "origin-response-handler"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/origin-response-handler.vcl")}"
  }

  vcl {
    name    = "route-cms-static-assets"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-cms-static-assets.vcl")}"
  }

  vcl {
    name    = "route-ads-static-assets"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-ads-static-assets.vcl")}"
  }

  vcl {
    name    = "route-search-suggest-svc"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-search-suggest-svc.vcl")}"
    }

  vcl {
    name    = "route-collections-svc"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-collections-svc.vcl")}"
  }

  vcl {
    name    = "route-sitemap"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-sitemap.vcl")}"
  }

  vcl {
    name    = "backend-newsroom-files-gcs"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-newsroom-files-gcs.vcl")}"
  }

  vcl {
    name    = "backend-newsgraphics-gcs"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-newsgraphics-gcs.vcl")}"
  }

  vcl {
    name    = "backend-profile-fe"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/backend-profile-fe.vcl")}"
  }

  vcl {
    name    = "route-community-svc"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-community-svc.vcl")}"
  }

  vcl {
    name    = "route-switchboard"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-switchboard.vcl")}"
  }

  vcl {
    name    = "route-esi-jsonp-callback"
    main    = false
    content = "${file("${path.module}/builds/www.stg.nytimes.com/route-esi-jsonp-callback.vcl")}"
  }

}
