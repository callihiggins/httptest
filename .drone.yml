workspace:
  base: /root

pipeline:

  # First step is yml file syntax check for all environment
  yml_syntax_check:
    image: inzinger/alpine-ruby:2.3
    commands:
      - ruby -r yaml -e 'YAML.parse(File.open("./config/dev.yml"))'
      - ruby -r yaml -e 'YAML.parse(File.open("./config/stg.yml"))'
      - ruby -r yaml -e 'YAML.parse(File.open("./config/prd.yml"))'

  # This step runs the template engine for sandbox and dev services
  # notice we are setting an env for dev that will trigger
  # dev specific domain templating (dev + sandboxes)
  # someday if .sbx.nytimes.com is not Vi alpha service only we will iterate
  dev-template:
    image: hairyhenderson/gomplate:v2.3.0
    environment:
      - env=dev
    commands:
      - /gomplate -f terraform/fastly.tf.tmpl -o terraform/fastly.tf -d config=config/dev.yml
      - /gomplate -f vcl/route-backend-health-report.vcl.tmpl -o vcl/route-backend-health-report.vcl -d config=config/dev.yml
    when:
      event: push
      branch:
        exclude: [ master ]

  # this step is used to validate the Terraform syntax before attempting apply
  # the terraform configuration to the service, it essentially runs: terraform plan
  # it's ok that this uses dev service for everything, just a plan to validate tf
  tf_syntax_check:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: true
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/dev/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-dev"
    vars:
      env: dev
      service_name: dev
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        exclude: [ master ]



  # SANDBOX: uses branch sandbox01 to deploy to www.sandbox01
  sandbox01:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/sandbox01/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-sandbox01"
    vars:
      env: dev
      service_name: sandbox01
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        include: [ sandbox01 ]

  # Run tests against dev service in sandbox01
  sandbox01-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www-sandbox01.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        include: [ sandbox01 ]

  # SANDBOX: uses branch sandbox02 to deploy to www.sandbox02
  sandbox02:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/sandbox02/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-sandbox02"
    vars:
      env: dev
      service_name: sandbox02
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        include: [ sandbox02 ]

  # Run tests against dev service in sandbox02
  sandbox02-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www-sandbox02.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        include: [ sandbox02 ]

  # SANDBOX: uses branch sandbox03 to deploy to www.sandbox03
  sandbox03:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/sandbox03/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-sandbox03"
    vars:
      env: dev
      service_name: sandbox03
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        include: [ sandbox03 ]

  # Run tests against dev service in sandbox03
  sandbox03-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www-sandbox03.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        include: [ sandbox03 ]


  # SANDBOX: uses branch sandbox04 to deploy to www.sandbox04
  sandbox04:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/sandbox04/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-sandbox04"
    vars:
      env: dev
      service_name: sandbox04
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        include: [ sandbox04 ]

  # Run tests against dev service in sandbox04
  sandbox04-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www-sandbox04.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        include: [ sandbox04 ]

  # SANDBOX: uses branch sandbox05 to deploy to www.sandbox05
  sandbox05:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/sandbox05/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-sandbox05"
    vars:
      env: dev
      service_name: sandbox05
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        include: [ sandbox05 ]

  # Run tests against dev service in sandbox05
  sandbox05-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www-sandbox05.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        include: [ sandbox05 ]

  # SANDBOX: uses branch sandbox06 to deploy to www.sandbox06
  sandbox06:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/sandbox06/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-sandbox06"
    vars:
      env: dev
      service_name: sandbox06
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        include: [ sandbox06 ]

  # Run tests against dev service in sandbox04
  sandbox06-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www-sandbox06.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        include: [ sandbox06 ]

  # DEV: Deploy to www.dev service
  dev:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/dev/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-dev"
    vars:
      env: dev
      service_name: dev
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch:
        exclude: [ sandbox0*, master ]

  dev-wait:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-wait
    pull: true
    expected_version_path: /root/output/vcl_version
    hostname: https://www.dev.nytimes.com
    secrets:
      - source: fastly_api_key_dev
        target: FASTLY_API_KEY
    when:
      # Test dev environment for every pull request
      event: push
      branch:
        exclude: [ sandbox0*, master ]

  # Run tests against dev service
  dev-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        exclude: [ sandbox0*, master ]

  # Run tests against dev service
  dev-paidpost-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: paidpost.dev.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch:
        exclude: [ sandbox0*, master ]
      status: [success, failure]

  stg-template:
    image: hairyhenderson/gomplate:v2.3.0
    commands:
      - /gomplate -f terraform/fastly.tf.tmpl -o terraform/fastly.tf -d config=config/stg.yml
      - /gomplate -f vcl/route-backend-health-report.vcl.tmpl -o vcl/route-backend-health-report.vcl -d config=config/stg.yml
    when:
      event: push
      branch: master

  # --------
  # Deployment to staging service
  staging:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/stg/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-stg"
    vars:
      env: stg
      service_name: stg
    secrets:
      - source: fastly_api_key_stg
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: push
      branch: master

  stg-wait:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-wait
    pull: true
    expected_version_path: /root/output/vcl_version
    hostname: https://www.stg.nytimes.com
    secrets:
      - source: fastly_api_key_stg
        target: FASTLY_API_KEY
    when:
      # Deploy to stg for every push to master
      event: push
      branch: master

  stg-diff:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-vcl-diff
    pull: true
    service_id: 5ZUFNZ8akJJutsQY0aLhyG
    secrets:
      - source: fastly_api_key_stg
        target: FASTLY_API_KEY
    when:
      event: push
      branch: master

  stg-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www.stg.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch: master

  stg-paidpost-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: paidpost.stg.nytimes.com
    print_failures_only: true
    when:
      event: push
      branch: master
      status: [success, failure]

  # -----
  prd-template:
    image: hairyhenderson/gomplate:v2.3.0
    commands:
      - /gomplate -f terraform/fastly.tf.tmpl -o terraform/fastly.tf -d config=config/prd.yml
      - /gomplate -f vcl/route-backend-health-report.vcl.tmpl -o vcl/route-backend-health-report.vcl -d config=config/prd.yml
    when:
      event: tag
      branch: [ master, hotfix* ]

 # Deployment to production service
  production:
    image: jmccann/drone-terraform:4.0-0.10.7
    environment:
      AWS_ACCESS_KEY_ID: "AKIAIGLI4T7FC5NL3NDA"
    plan: false
    root_dir: terraform
    init_options:
      lock: true
      lock-timeout: 300s
      backend-config:
        - "key=www/prd/terraform.tfstate"
        - "role_arn=arn:aws:iam::731841313232:role/fastly-www-prd"
    vars:
      env: prd
      service_name: prd
    secrets:
      - source: fastly_api_key_prd
        target: FASTLY_API_KEY

      - source: aws_secret_access_key
        target: AWS_SECRET_ACCESS_KEY
    when:
      event: tag
      branch: [ master, hotfix* ]

  prd-wait:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-wait
    pull: true
    expected_version_path: /root/output/vcl_version
    hostname: https://www.nytimes.com
    secrets:
      - source: fastly_api_key_prd
        target: FASTLY_API_KEY
    when:
      # Test prd environment for every tag in git
      event: tag

  prd-diff:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-vcl-diff
    pull: true
    service_id: 4KIqPuWQ3AzqDCA3lc4vxE
    secrets:
      - source: fastly_api_key_prd
        target: FASTLY_API_KEY
    when:
      event: tag

  prd-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: www.nytimes.com
    print_failures_only: true
    when:
      event: tag
      branch: [ master, hotfix* ]

  prd-paidpost-test:
    image: us.gcr.io/nyt-registry-prd/drone-fastly-tests
    servername: paidpost.nytimes.com
    print_failures_only: true
    when:
      event: tag
      branch: [ master, hotfix* ]
      status: [success, failure]

  slack:
    image: plugins/slack
    channel: fastly-builds
    username: fastly-www
    secrets: [SLACK_WEBHOOK]
    when:
      status: [success, failure, blocked]
